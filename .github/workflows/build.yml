name: CI Pipeline

on: [push, pull_request]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install make on Windows
        if: runner.os == 'Windows'
        run: |
          choco install make
          choco install mingw
          refreshenv
      - name: Set up Conan dependencies
        uses: conan-io/conan-action@v2
        with:
          conan_version: latest
          profile: default
      - name: Build the project
        run: |
            make all
  release:
    name: Release on master
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Git
        run: |
          git config --global user.name "${{ secrets.GITHUB_ACTOR }}"
          git config --global user.email "${{ secrets.GITHUB_EMAIL }}"
      - name: Bump version
        id: version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: master
          default_bump: patch  # Use 'patch', 'minor', or 'major'
          custom_tag: false
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.new_tag }}
          body: "Automated release of version ${{ steps.version.outputs.new_tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifacts for all platforms
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.version.outputs.new_tag }}
          asset_path: ./build/bin
          asset_name: movie_booking_service_${{ matrix.os }}
          asset_content_type: application/octet-stream
  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.GITHUB_ACTOR }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository }}/movie_booking_service:${{ steps.version.outputs.new_tag }} .
      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository }}/movie_booking_service:${{ steps.version.outputs.new_tag }}
