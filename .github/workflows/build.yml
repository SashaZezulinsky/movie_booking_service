name: CI Pipeline
on: [push, pull_request]
jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install Conan
        run: |
          python -m pip install --upgrade pip
          python -m pip install conan
      - name: Set up Conan profile
        run: conan profile detect
      - name: Install build tools on Windows
        if: runner.os == 'Windows'
        run: |
          choco install make
          choco install mingw
          refreshenv
      - name: Build the project
        run: make all
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: movie_booking_service_${{ matrix.os }}
          path: bin/movie_booking_service
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Git
        run: |
          git config --global user.name "${{ secrets.GITHUB_ACTOR }}"
          git config --global user.email "${{ secrets.GITHUB_EMAIL }}"
      - name: Bump version
        id: version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: master
          default_bump: patch  # Use 'patch', 'minor', or 'major'
          custom_tag: false
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.new_tag }}
          body: "Automated release of version ${{ steps.version.outputs.new_tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload_artifacts:
    name: Upload Release Artifacts for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: create_release
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: movie_booking_service_${{ matrix.os }}
          path: ./build/${{ matrix.os }}
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./build/${{ matrix.os }}/bin/movie_booking_service
          asset_name: movie_booking_service_${{ matrix.os }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image
        run: |
          docker build -t movie_booking_service:latest .
          docker tag movie_booking_service:latest ghcr.io/${{ github.repository }}/movie_booking_service:latest
      - name: Push Docker image to GitHub Packages
        run: |
          docker push ghcr.io/${{ github.repository }}/movie_booking_service:latest
